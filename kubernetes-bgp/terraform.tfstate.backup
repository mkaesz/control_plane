{
  "version": 4,
  "terraform_version": "0.12.9",
  "serial": 181,
  "lineage": "d0949e98-886a-e322-de4f-3bf39d7c822c",
  "outputs": {
    "kubeadm_join_command": {
      "value": [
        "kubeadm join 10.80.113.5:6443 --token 1vjime.ujxi7xa93nproxj6     --discovery-token-ca-cert-hash sha256:30cb6519381e280843780b860372ddab79d1abe882dbd9e7aa8fb3bb87b6ea9a "
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    },
    "load_balancer_ips": {
      "value": [
        "147.75.83.92/31"
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    },
    "master_address": {
      "value": [
        "147.75.102.117"
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    },
    "worker_addresses": {
      "value": [
        [
          "147.75.102.85",
          "147.75.102.159"
        ]
      ],
      "type": [
        "tuple",
        [
          [
            "tuple",
            [
              "string",
              "string"
            ]
          ]
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "external",
      "name": "kubeadm_join",
      "provider": "provider.external",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "./scripts/kubeadm-token.sh"
            ],
            "query": {
              "host": "147.75.102.117"
            },
            "result": {
              "command": "kubeadm join 10.80.113.5:6443 --token 1vjime.ujxi7xa93nproxj6     --discovery-token-ca-cert-hash sha256:30cb6519381e280843780b860372ddab79d1abe882dbd9e7aa8fb3bb87b6ea9a "
            },
            "working_dir": null
          },
          "depends_on": [
            "packet_device.k8s_controller"
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "external",
      "name": "private_ipv4_gateway",
      "each": "list",
      "provider": "provider.external",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "./scripts/gateway.sh"
            ],
            "query": {
              "host": "147.75.102.85"
            },
            "result": {
              "peer_ip": "10.80.113.16"
            },
            "working_dir": null
          },
          "depends_on": [
            "packet_device.k8s_workers"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "-",
            "program": [
              "./scripts/gateway.sh"
            ],
            "query": {
              "host": "147.75.102.159"
            },
            "result": {
              "peer_ip": "10.80.113.2"
            },
            "working_dir": null
          },
          "depends_on": [
            "packet_device.k8s_workers"
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "calico_metallb",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "d1f1d63ee4fc68648d6eb867ccb692384e9237b42ae2a2fb6e56b28c357c9d5b",
            "rendered": "apiVersion: projectcalico.org/v3\nkind: BGPConfiguration\nmetadata:\n  name: default\nspec:\n  logSeverityScreen: Info\n  nodeToNodeMeshEnabled: true\n  asNumber: 65000\n\n---\n\napiVersion: projectcalico.org/v3\nkind: BGPPeer\nmetadata:\n  name: metallb\nspec:\n  peerIP: 127.0.0.1\n  asNumber: 65480\n\n---\n\napiVersion: projectcalico.org/v3\nkind: IPPool\nmetadata:\n  name: metallb-packet-public\nspec:\n  cidr: 147.75.83.92/31\n  disabled: true\n",
            "template": "apiVersion: projectcalico.org/v3\nkind: BGPConfiguration\nmetadata:\n  name: default\nspec:\n  logSeverityScreen: Info\n  nodeToNodeMeshEnabled: true\n  asNumber: 65000\n\n---\n\napiVersion: projectcalico.org/v3\nkind: BGPPeer\nmetadata:\n  name: metallb\nspec:\n  peerIP: 127.0.0.1\n  asNumber: 65480\n\n---\n\napiVersion: projectcalico.org/v3\nkind: IPPool\nmetadata:\n  name: metallb-packet-public\nspec:\n  cidr: ${cidr}\n  disabled: true\n",
            "vars": {
              "cidr": "147.75.83.92/31"
            }
          },
          "depends_on": [
            "packet_reserved_ip_block.load_balancer_ips"
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "install_docker",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f2848ae2204cb8c012c1844a7f7dffdf16a071c5c1f7173820aa9af0a220edea",
            "rendered": "#!/bin/bash\n# vim: syntax=sh\n\necho \"[----- Begin install-docker.sh ----]\"\n\necho \"Installing Docker 18.06.2\"\n\n# Based on from https://kubernetes.io/docs/setup/cri/#docker\n\n# Install Docker CE\n## Set up the repository:\n### Install packages to allow apt to use a repository over HTTPS\napt-get update \\\n  \u0026\u0026 apt-get install -y \\\n  apt-transport-https \\\n  ca-certificates \\\n  curl \\\n  software-properties-common\n\n### Add Docker’s official GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\n### Add Docker apt repository\nadd-apt-repository \\\n  \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\\n  $(lsb_release -cs) \\\n  stable\"\n\n## Install Docker CE\napt-get update \\\n  \u0026\u0026 apt-get install -y \\\n  docker-ce=$(apt-cache madison docker-ce | grep 18.06.2 | head -1 | awk '{print $3}')\n\n# Setup daemon\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker\nsystemctl daemon-reload\nsystemctl restart docker\n\necho \"[----- install-docker.sh Complete ------]\"\n",
            "template": "#!/bin/bash\n# vim: syntax=sh\n\necho \"[----- Begin install-docker.sh ----]\"\n\necho \"Installing Docker ${docker_version}\"\n\n# Based on from https://kubernetes.io/docs/setup/cri/#docker\n\n# Install Docker CE\n## Set up the repository:\n### Install packages to allow apt to use a repository over HTTPS\napt-get update \\\n  \u0026\u0026 apt-get install -y \\\n  apt-transport-https \\\n  ca-certificates \\\n  curl \\\n  software-properties-common\n\n### Add Docker’s official GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\n### Add Docker apt repository\nadd-apt-repository \\\n  \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\\n  $(lsb_release -cs) \\\n  stable\"\n\n## Install Docker CE\napt-get update \\\n  \u0026\u0026 apt-get install -y \\\n  docker-ce=$(apt-cache madison docker-ce | grep ${docker_version} | head -1 | awk '{print $3}')\n\n# Setup daemon\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker\nsystemctl daemon-reload\nsystemctl restart docker\n\necho \"[----- install-docker.sh Complete ------]\"\n",
            "vars": {
              "docker_version": "18.06.2"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "install_kubernetes",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "d5934e3f0befd4c58323b69bec067d81610ed1320fe7c904ea9093fd39ac4640",
            "rendered": "#!/bin/bash\n\nHOSTNAME=$(hostname -s)\n# Get Packet server's private IP address\nLOCAL_IP=$(ip a | grep \"inet 10\" | cut -d\" \" -f6 | cut -d\"/\" -f1)\n\nget_version () {\n\tPACKAGE=$1\n\tVERSION=$2\n\tapt-cache madison $PACKAGE | grep $VERSION | head -1 | awk '{print $3}'\n}\n\necho \"[----- Setting up kubernetes configurations -----]\"\n\napt-get update\napt-get install -y apt-transport-https curl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\ncat \u003c\u003cEOF \u003e/etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-$(lsb_release -cs) main\nEOF\napt-get update\napt-get install -y \\\n\tkubelet=$(get_version kubelet 1.15.3) \\\n\tkubeadm=$(get_version kubeadm 1.15.3) \\\n\tkubectl=$(get_version kubectl 1.15.3) \\\n\tcri-tools\n\n# Make the kubelet use only the private IP to run it's management controller pods\necho \"KUBELET_EXTRA_ARGS=\\\"--node-ip=$LOCAL_IP --address=$LOCAL_IP\\\"\" \u003e /etc/default/kubelet\n\necho \"[---- Done setting up kubernetes configurations -----]\"\n",
            "template": "#!/bin/bash\n\nHOSTNAME=$(hostname -s)\n# Get Packet server's private IP address\nLOCAL_IP=$(ip a | grep \"inet 10\" | cut -d\" \" -f6 | cut -d\"/\" -f1)\n\nget_version () {\n\tPACKAGE=$1\n\tVERSION=$2\n\tapt-cache madison $PACKAGE | grep $VERSION | head -1 | awk '{print $3}'\n}\n\necho \"[----- Setting up kubernetes configurations -----]\"\n\napt-get update\napt-get install -y apt-transport-https curl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\ncat \u003c\u003cEOF \u003e/etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-$(lsb_release -cs) main\nEOF\napt-get update\napt-get install -y \\\n\tkubelet=$(get_version kubelet ${kubernetes_version}) \\\n\tkubeadm=$(get_version kubeadm ${kubernetes_version}) \\\n\tkubectl=$(get_version kubectl ${kubernetes_version}) \\\n\tcri-tools\n\n# Make the kubelet use only the private IP to run it's management controller pods\necho \"KUBELET_EXTRA_ARGS=\\\"--node-ip=$LOCAL_IP --address=$LOCAL_IP\\\"\" \u003e /etc/default/kubelet\n\necho \"[---- Done setting up kubernetes configurations -----]\"\n",
            "vars": {
              "kubernetes_version": "1.15.3"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "metallb_config",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "ca77d1145e779e0e023ffb1db44dd0e0937b34e3a3d018965dd6e952c510bcff",
            "rendered": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    peers:\n    - peer-address: 127.0.0.1\n      peer-asn: 65000\n      my-asn: 65480\n    address-pools:\n    - name: packet-public\n      protocol: bgp\n      addresses:\n      - 147.75.83.92/31\n",
            "template": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    peers:\n    - peer-address: 127.0.0.1\n      peer-asn: 65000\n      my-asn: 65480\n    address-pools:\n    - name: packet-public\n      protocol: bgp\n      addresses:\n      - ${cidr}\n",
            "vars": {
              "cidr": "147.75.83.92/31"
            }
          },
          "depends_on": [
            "packet_reserved_ip_block.load_balancer_ips"
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "setup_kubeadm",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "458657109bdc70c3c8b71d567058f9c5368c24de069b990c4305b2683622e856",
            "rendered": "#!/bin/bash\n# vim: syntax=sh\n\nHOSTNAME=$(hostname -s)\nLOCAL_IP=$(ip a | grep \"inet 10\" | cut -d\" \" -f6 | cut -d\"/\" -f1)\n\necho \"[----- Setting up Kubernetes using kubeadm ----]\"\n\ncat \u003c\u003cEOF \u003ekubeadm-config.yaml\napiVersion: kubeadm.k8s.io/v1beta1\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: $LOCAL_IP\n  bindPort: 6443\nnodeRegistration:\n  name: $HOSTNAME\n  taints:\n  - key: \"kubeadmNode\"\n    value: \"master\"\n    effect: \"NoSchedule\"\n  kubeletExtraArgs:\n    cgroup-driver: \"systemd\"\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: ClusterConfiguration\nclusterName: kubernetes\nkubernetesVersion: v1.15.3\napiServer:\n  extraArgs:\n    secure-port: \"6443\"\n    bind-address: $LOCAL_IP\ncontrollerManager:\n  extraArgs:\n    bind-address: $LOCAL_IP\nscheduler:\n  extraArgs:\n    bind-address: $LOCAL_IP\netcd:\n  local:\n    extraArgs:\n      listen-client-urls: \"https://127.0.0.1:2379,https://$LOCAL_IP:2379\"\n      advertise-client-urls: \"https://$LOCAL_IP:2379\"\n      listen-peer-urls: \"https://$LOCAL_IP:2380\"\n      initial-advertise-peer-urls: \"https://$LOCAL_IP:2380\"\n      initial-cluster: \"$HOSTNAME=https://$LOCAL_IP:2380\"\n      initial-cluster-state: new\n    serverCertSANs:\n      - $HOSTNAME\n    peerCertSANs:\n      - $HOSTNAME\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: 172.16.0.0/12\n  serviceSubnet: 192.168.0.0/16\n---\napiVersion: kubelet.config.k8s.io/v1beta1\nkind: KubeletConfiguration\nclusterDNS:\n- 192.168.0.10\nclusterDomain: cluster.local\n---\napiVersion: kubeproxy.config.k8s.io/v1alpha1\nkind: KubeProxyConfiguration\nbindAddress: $LOCAL_IP\nEOF\n\nkubeadm init --config kubeadm-config.yaml\n\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n\necho \"[---- Done setting up kubernetes -----]\"\n",
            "template": "#!/bin/bash\n# vim: syntax=sh\n\nHOSTNAME=$(hostname -s)\nLOCAL_IP=$(ip a | grep \"inet 10\" | cut -d\" \" -f6 | cut -d\"/\" -f1)\n\necho \"[----- Setting up Kubernetes using kubeadm ----]\"\n\ncat \u003c\u003cEOF \u003ekubeadm-config.yaml\napiVersion: kubeadm.k8s.io/v1beta1\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: $LOCAL_IP\n  bindPort: ${kubernetes_port}\nnodeRegistration:\n  name: $HOSTNAME\n  taints:\n  - key: \"kubeadmNode\"\n    value: \"master\"\n    effect: \"NoSchedule\"\n  kubeletExtraArgs:\n    cgroup-driver: \"systemd\"\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: ClusterConfiguration\nclusterName: kubernetes\nkubernetesVersion: ${kubernetes_version}\napiServer:\n  extraArgs:\n    secure-port: \"${kubernetes_port}\"\n    bind-address: $LOCAL_IP\ncontrollerManager:\n  extraArgs:\n    bind-address: $LOCAL_IP\nscheduler:\n  extraArgs:\n    bind-address: $LOCAL_IP\netcd:\n  local:\n    extraArgs:\n      listen-client-urls: \"https://127.0.0.1:2379,https://$LOCAL_IP:2379\"\n      advertise-client-urls: \"https://$LOCAL_IP:2379\"\n      listen-peer-urls: \"https://$LOCAL_IP:2380\"\n      initial-advertise-peer-urls: \"https://$LOCAL_IP:2380\"\n      initial-cluster: \"$HOSTNAME=https://$LOCAL_IP:2380\"\n      initial-cluster-state: new\n    serverCertSANs:\n      - $HOSTNAME\n    peerCertSANs:\n      - $HOSTNAME\nnetworking:\n  dnsDomain: ${kubernetes_dns_domain}\n  podSubnet: ${kubernetes_cluster_cidr}\n  serviceSubnet: ${kubernetes_service_cidr}\n---\napiVersion: kubelet.config.k8s.io/v1beta1\nkind: KubeletConfiguration\nclusterDNS:\n- ${kubernetes_dns_ip}\nclusterDomain: ${kubernetes_dns_domain}\n---\napiVersion: kubeproxy.config.k8s.io/v1alpha1\nkind: KubeProxyConfiguration\nbindAddress: $LOCAL_IP\nEOF\n\nkubeadm init --config kubeadm-config.yaml\n\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n\necho \"[---- Done setting up kubernetes -----]\"\n",
            "vars": {
              "kubernetes_cluster_cidr": "172.16.0.0/12",
              "kubernetes_dns_domain": "cluster.local",
              "kubernetes_dns_ip": "192.168.0.10",
              "kubernetes_port": "6443",
              "kubernetes_service_cidr": "192.168.0.0/16",
              "kubernetes_version": "v1.15.3"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "calico_node_peers",
      "each": "list",
      "provider": "provider.null",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3172621339273315751",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.external.private_ipv4_gateway",
            "null_resource.setup_calico_metallb",
            "packet_device.k8s_controller",
            "packet_device.k8s_workers"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "293612445642170983",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.external.private_ipv4_gateway",
            "null_resource.setup_calico_metallb",
            "packet_device.k8s_controller",
            "packet_device.k8s_workers"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_calico",
      "provider": "provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "9023158990983999464",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "packet_device.k8s_controller"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_calico_metallb",
      "provider": "provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6022745269211129779",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.calico_metallb",
            "null_resource.setup_worker",
            "packet_device.k8s_controller"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_metallb",
      "provider": "provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4046256753916691499",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.metallb_config",
            "null_resource.setup_calico_metallb",
            "packet_device.k8s_controller"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_nginx_ingress",
      "provider": "provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2314607417057678419",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "null_resource.calico_node_peers",
            "packet_device.k8s_controller"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_worker",
      "each": "list",
      "provider": "provider.null",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "928240665572818760",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.external.kubeadm_join",
            "data.template_file.install_docker",
            "data.template_file.install_kubernetes",
            "packet_device.k8s_controller",
            "packet_device.k8s_workers"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "3592877682564028332",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.external.kubeadm_join",
            "data.template_file.install_docker",
            "data.template_file.install_kubernetes",
            "packet_device.k8s_controller",
            "packet_device.k8s_workers"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "test-deployment",
      "provider": "provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7450292391859383024",
            "triggers": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "null_resource.calico_node_peers",
            "packet_device.k8s_controller"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "packet_bgp_session",
      "name": "kube_bgp",
      "each": "list",
      "provider": "provider.packet",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address_family": "ipv4",
            "default_route": false,
            "device_id": "c85dcd80-ac35-4037-a69b-1d5c33cf68ef",
            "id": "d617f9c9-3625-4cca-8840-64682a7b8d94",
            "status": "unknown"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "packet_device.k8s_workers"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "address_family": "ipv4",
            "default_route": false,
            "device_id": "7e129e8e-e25c-4ab9-a3f9-ba6683baa5d1",
            "id": "170a5976-f975-4dca-a4da-b4045e4d9232",
            "status": "unknown"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "packet_device.k8s_workers"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "packet_device",
      "name": "k8s_controller",
      "provider": "provider.packet",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_private_ipv4": "10.80.113.5",
            "access_public_ipv4": "147.75.102.117",
            "access_public_ipv6": "2604:1380:2000:a900::3",
            "always_pxe": false,
            "billing_cycle": "hourly",
            "created": "2019-09-21T22:51:53Z",
            "deployed_facility": "ams1",
            "description": null,
            "facilities": [
              "ams1"
            ],
            "facility": null,
            "hardware_reservation_id": null,
            "hostname": "ams1-controller",
            "id": "d557cd45-004e-49e4-b10d-9582b6b97f64",
            "ip_address_types": null,
            "ipxe_script_url": "",
            "locked": false,
            "network": [
              {
                "address": "147.75.102.117",
                "cidr": 31,
                "family": 4,
                "gateway": "147.75.102.116",
                "public": true
              },
              {
                "address": "2604:1380:2000:a900::3",
                "cidr": 127,
                "family": 6,
                "gateway": "2604:1380:2000:a900::2",
                "public": true
              },
              {
                "address": "10.80.113.5",
                "cidr": 31,
                "family": 4,
                "gateway": "10.80.113.4",
                "public": false
              }
            ],
            "network_type": "layer3",
            "operating_system": "ubuntu_16_04",
            "plan": "t1.small.x86",
            "ports": [
              {
                "bonded": true,
                "id": "3ff5be52-d16e-4b59-87c1-54ecc6b30fa0",
                "mac": "",
                "name": "bond0",
                "type": "NetworkBondPort"
              },
              {
                "bonded": true,
                "id": "0900d6f5-6bad-43c7-b987-f04f7e86c531",
                "mac": "0c:c4:7a:b5:86:9e",
                "name": "eth0",
                "type": "NetworkPort"
              },
              {
                "bonded": true,
                "id": "dec3978c-62c0-46dd-ae45-a1cabbceb6c7",
                "mac": "0c:c4:7a:b5:86:9f",
                "name": "eth1",
                "type": "NetworkPort"
              }
            ],
            "project_id": "01816d2a-97da-4589-a4b9-0de9eaf600cf",
            "project_ssh_key_ids": null,
            "public_ipv4_subnet_size": 31,
            "root_password": "7dx-*(QQ4M",
            "ssh_key_ids": [
              "6f07ea62-b277-4738-8fd6-70e9622a51a1"
            ],
            "state": "active",
            "storage": "",
            "tags": [
              "kubernetes",
              "k8s",
              "controller"
            ],
            "updated": "2019-09-21T22:52:53Z",
            "user_data": null,
            "wait_for_reservation_deprovision": false
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.install_docker",
            "data.template_file.install_kubernetes",
            "data.template_file.setup_kubeadm"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "packet_device",
      "name": "k8s_workers",
      "each": "list",
      "provider": "provider.packet",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "access_private_ipv4": "10.80.113.17",
            "access_public_ipv4": "147.75.102.85",
            "access_public_ipv6": "2604:1380:2000:a900::b",
            "always_pxe": false,
            "billing_cycle": "hourly",
            "created": "2019-09-21T22:51:53Z",
            "deployed_facility": "ams1",
            "description": null,
            "facilities": [
              "ams1"
            ],
            "facility": null,
            "hardware_reservation_id": null,
            "hostname": "ams1-worker-0",
            "id": "c85dcd80-ac35-4037-a69b-1d5c33cf68ef",
            "ip_address_types": null,
            "ipxe_script_url": "",
            "locked": false,
            "network": [
              {
                "address": "147.75.102.85",
                "cidr": 31,
                "family": 4,
                "gateway": "147.75.102.84",
                "public": true
              },
              {
                "address": "2604:1380:2000:a900::b",
                "cidr": 127,
                "family": 6,
                "gateway": "2604:1380:2000:a900::a",
                "public": true
              },
              {
                "address": "10.80.113.17",
                "cidr": 31,
                "family": 4,
                "gateway": "10.80.113.16",
                "public": false
              }
            ],
            "network_type": "layer3",
            "operating_system": "ubuntu_16_04",
            "plan": "t1.small.x86",
            "ports": [
              {
                "bonded": true,
                "id": "f5498628-aeb0-411a-8154-0965dc669a31",
                "mac": "",
                "name": "bond0",
                "type": "NetworkBondPort"
              },
              {
                "bonded": true,
                "id": "78c1a89d-2dd0-4dfd-807b-c03d3f683dc3",
                "mac": "0c:c4:7a:e5:48:e0",
                "name": "eth0",
                "type": "NetworkPort"
              },
              {
                "bonded": true,
                "id": "20356419-0631-4e07-99be-43e6cfb3b232",
                "mac": "0c:c4:7a:e5:48:e1",
                "name": "eth1",
                "type": "NetworkPort"
              }
            ],
            "project_id": "01816d2a-97da-4589-a4b9-0de9eaf600cf",
            "project_ssh_key_ids": null,
            "public_ipv4_subnet_size": 31,
            "root_password": "Y$7zC9F{u[",
            "ssh_key_ids": [
              "6f07ea62-b277-4738-8fd6-70e9622a51a1"
            ],
            "state": "active",
            "storage": "",
            "tags": [
              "kubernetes",
              "k8s",
              "worker"
            ],
            "updated": "2019-09-21T22:52:49Z",
            "user_data": null,
            "wait_for_reservation_deprovision": false
          },
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "access_private_ipv4": "10.80.113.3",
            "access_public_ipv4": "147.75.102.159",
            "access_public_ipv6": "2604:1380:2000:a900::9",
            "always_pxe": false,
            "billing_cycle": "hourly",
            "created": "2019-09-21T22:51:53Z",
            "deployed_facility": "ams1",
            "description": null,
            "facilities": [
              "ams1"
            ],
            "facility": null,
            "hardware_reservation_id": null,
            "hostname": "ams1-worker-1",
            "id": "7e129e8e-e25c-4ab9-a3f9-ba6683baa5d1",
            "ip_address_types": null,
            "ipxe_script_url": "",
            "locked": false,
            "network": [
              {
                "address": "147.75.102.159",
                "cidr": 31,
                "family": 4,
                "gateway": "147.75.102.158",
                "public": true
              },
              {
                "address": "2604:1380:2000:a900::9",
                "cidr": 127,
                "family": 6,
                "gateway": "2604:1380:2000:a900::8",
                "public": true
              },
              {
                "address": "10.80.113.3",
                "cidr": 31,
                "family": 4,
                "gateway": "10.80.113.2",
                "public": false
              }
            ],
            "network_type": "layer3",
            "operating_system": "ubuntu_16_04",
            "plan": "t1.small.x86",
            "ports": [
              {
                "bonded": true,
                "id": "6f8655a8-3e2b-43ca-914f-40baab30fd3d",
                "mac": "",
                "name": "bond0",
                "type": "NetworkBondPort"
              },
              {
                "bonded": true,
                "id": "7769f79e-d451-4e5d-af62-ffc6b14724bc",
                "mac": "0c:c4:7a:20:59:90",
                "name": "eth0",
                "type": "NetworkPort"
              },
              {
                "bonded": true,
                "id": "022f207d-01b1-41c0-b198-6b521336f4ef",
                "mac": "0c:c4:7a:20:59:91",
                "name": "eth1",
                "type": "NetworkPort"
              }
            ],
            "project_id": "01816d2a-97da-4589-a4b9-0de9eaf600cf",
            "project_ssh_key_ids": null,
            "public_ipv4_subnet_size": 31,
            "root_password": "F\u002692Ha%X=k",
            "ssh_key_ids": [
              "6f07ea62-b277-4738-8fd6-70e9622a51a1"
            ],
            "state": "active",
            "storage": "",
            "tags": [
              "kubernetes",
              "k8s",
              "worker"
            ],
            "updated": "2019-09-21T22:52:49Z",
            "user_data": null,
            "wait_for_reservation_deprovision": false
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "packet_reserved_ip_block",
      "name": "load_balancer_ips",
      "provider": "provider.packet",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "147.75.83.93",
            "address_family": 4,
            "cidr": 31,
            "cidr_notation": "147.75.83.92/31",
            "facility": "ams1",
            "gateway": "147.75.83.92",
            "global": false,
            "id": "d3b6b17c-2933-48d9-8dd7-1cf305cb26e5",
            "manageable": true,
            "management": false,
            "netmask": "255.255.255.254",
            "network": "147.75.83.92",
            "project_id": "01816d2a-97da-4589-a4b9-0de9eaf600cf",
            "public": true,
            "quantity": 2,
            "type": "public_ipv4"
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
