{
  "version": 4,
  "terraform_version": "0.12.9",
  "serial": 26,
  "lineage": "381397f5-c372-44ad-acc1-99ff56f59484",
  "outputs": {
    "kubeadm_join_command": {
      "value": [
        null
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    },
    "load_balancer_ips": {
      "value": [
        "147.75.205.98/31"
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    },
    "master_address": {
      "value": [
        "147.75.205.143"
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    },
    "worker_addresses": {
      "value": [
        []
      ],
      "type": [
        "tuple",
        [
          [
            "tuple",
            []
          ]
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "external",
      "name": "kubeadm_join",
      "provider": "provider.external",
      "instances": []
    },
    {
      "mode": "data",
      "type": "external",
      "name": "private_ipv4_gateway",
      "each": "list",
      "provider": "provider.external",
      "instances": []
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "calico_metallb",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "887eaaa7f93fea13a7b88a193a6d61419037c28135b2dd0d595d89187f79012c",
            "rendered": "apiVersion: projectcalico.org/v3\nkind: BGPConfiguration\nmetadata:\n  name: default\nspec:\n  logSeverityScreen: Info\n  nodeToNodeMeshEnabled: true\n  asNumber: 65000\n\n---\n\napiVersion: projectcalico.org/v3\nkind: BGPPeer\nmetadata:\n  name: metallb\nspec:\n  peerIP: 127.0.0.1\n  asNumber: 65480\n\n---\n\napiVersion: projectcalico.org/v3\nkind: IPPool\nmetadata:\n  name: metallb-packet-public\nspec:\n  cidr: 147.75.205.98/31\n  disabled: true\n",
            "template": "apiVersion: projectcalico.org/v3\nkind: BGPConfiguration\nmetadata:\n  name: default\nspec:\n  logSeverityScreen: Info\n  nodeToNodeMeshEnabled: true\n  asNumber: 65000\n\n---\n\napiVersion: projectcalico.org/v3\nkind: BGPPeer\nmetadata:\n  name: metallb\nspec:\n  peerIP: 127.0.0.1\n  asNumber: 65480\n\n---\n\napiVersion: projectcalico.org/v3\nkind: IPPool\nmetadata:\n  name: metallb-packet-public\nspec:\n  cidr: ${cidr}\n  disabled: true\n",
            "vars": {
              "cidr": "147.75.205.98/31"
            }
          },
          "depends_on": [
            "packet_reserved_ip_block.load_balancer_ips"
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "install_docker",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f2848ae2204cb8c012c1844a7f7dffdf16a071c5c1f7173820aa9af0a220edea",
            "rendered": "#!/bin/bash\n# vim: syntax=sh\n\necho \"[----- Begin install-docker.sh ----]\"\n\necho \"Installing Docker 18.06.2\"\n\n# Based on from https://kubernetes.io/docs/setup/cri/#docker\n\n# Install Docker CE\n## Set up the repository:\n### Install packages to allow apt to use a repository over HTTPS\napt-get update \\\n  \u0026\u0026 apt-get install -y \\\n  apt-transport-https \\\n  ca-certificates \\\n  curl \\\n  software-properties-common\n\n### Add Docker’s official GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\n### Add Docker apt repository\nadd-apt-repository \\\n  \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\\n  $(lsb_release -cs) \\\n  stable\"\n\n## Install Docker CE\napt-get update \\\n  \u0026\u0026 apt-get install -y \\\n  docker-ce=$(apt-cache madison docker-ce | grep 18.06.2 | head -1 | awk '{print $3}')\n\n# Setup daemon\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker\nsystemctl daemon-reload\nsystemctl restart docker\n\necho \"[----- install-docker.sh Complete ------]\"\n",
            "template": "#!/bin/bash\n# vim: syntax=sh\n\necho \"[----- Begin install-docker.sh ----]\"\n\necho \"Installing Docker ${docker_version}\"\n\n# Based on from https://kubernetes.io/docs/setup/cri/#docker\n\n# Install Docker CE\n## Set up the repository:\n### Install packages to allow apt to use a repository over HTTPS\napt-get update \\\n  \u0026\u0026 apt-get install -y \\\n  apt-transport-https \\\n  ca-certificates \\\n  curl \\\n  software-properties-common\n\n### Add Docker’s official GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\n### Add Docker apt repository\nadd-apt-repository \\\n  \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\\n  $(lsb_release -cs) \\\n  stable\"\n\n## Install Docker CE\napt-get update \\\n  \u0026\u0026 apt-get install -y \\\n  docker-ce=$(apt-cache madison docker-ce | grep ${docker_version} | head -1 | awk '{print $3}')\n\n# Setup daemon\ncat \u003e /etc/docker/daemon.json \u003c\u003cEOF\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\"\n}\nEOF\n\nmkdir -p /etc/systemd/system/docker.service.d\n\n# Restart docker\nsystemctl daemon-reload\nsystemctl restart docker\n\necho \"[----- install-docker.sh Complete ------]\"\n",
            "vars": {
              "docker_version": "18.06.2"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "install_kubernetes",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "d5934e3f0befd4c58323b69bec067d81610ed1320fe7c904ea9093fd39ac4640",
            "rendered": "#!/bin/bash\n\nHOSTNAME=$(hostname -s)\n# Get Packet server's private IP address\nLOCAL_IP=$(ip a | grep \"inet 10\" | cut -d\" \" -f6 | cut -d\"/\" -f1)\n\nget_version () {\n\tPACKAGE=$1\n\tVERSION=$2\n\tapt-cache madison $PACKAGE | grep $VERSION | head -1 | awk '{print $3}'\n}\n\necho \"[----- Setting up kubernetes configurations -----]\"\n\napt-get update\napt-get install -y apt-transport-https curl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\ncat \u003c\u003cEOF \u003e/etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-$(lsb_release -cs) main\nEOF\napt-get update\napt-get install -y \\\n\tkubelet=$(get_version kubelet 1.15.3) \\\n\tkubeadm=$(get_version kubeadm 1.15.3) \\\n\tkubectl=$(get_version kubectl 1.15.3) \\\n\tcri-tools\n\n# Make the kubelet use only the private IP to run it's management controller pods\necho \"KUBELET_EXTRA_ARGS=\\\"--node-ip=$LOCAL_IP --address=$LOCAL_IP\\\"\" \u003e /etc/default/kubelet\n\necho \"[---- Done setting up kubernetes configurations -----]\"\n",
            "template": "#!/bin/bash\n\nHOSTNAME=$(hostname -s)\n# Get Packet server's private IP address\nLOCAL_IP=$(ip a | grep \"inet 10\" | cut -d\" \" -f6 | cut -d\"/\" -f1)\n\nget_version () {\n\tPACKAGE=$1\n\tVERSION=$2\n\tapt-cache madison $PACKAGE | grep $VERSION | head -1 | awk '{print $3}'\n}\n\necho \"[----- Setting up kubernetes configurations -----]\"\n\napt-get update\napt-get install -y apt-transport-https curl\ncurl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\ncat \u003c\u003cEOF \u003e/etc/apt/sources.list.d/kubernetes.list\ndeb http://apt.kubernetes.io/ kubernetes-$(lsb_release -cs) main\nEOF\napt-get update\napt-get install -y \\\n\tkubelet=$(get_version kubelet ${kubernetes_version}) \\\n\tkubeadm=$(get_version kubeadm ${kubernetes_version}) \\\n\tkubectl=$(get_version kubectl ${kubernetes_version}) \\\n\tcri-tools\n\n# Make the kubelet use only the private IP to run it's management controller pods\necho \"KUBELET_EXTRA_ARGS=\\\"--node-ip=$LOCAL_IP --address=$LOCAL_IP\\\"\" \u003e /etc/default/kubelet\n\necho \"[---- Done setting up kubernetes configurations -----]\"\n",
            "vars": {
              "kubernetes_version": "1.15.3"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "metallb_config",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "5eb8b89a6898933255d4c28930d5afd80bf1edfa44957c323dd9f9cc541a4c73",
            "rendered": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    peers:\n    - peer-address: 127.0.0.1\n      peer-asn: 65000\n      my-asn: 65480\n    address-pools:\n    - name: packet-public\n      protocol: bgp\n      addresses:\n      - 147.75.205.98/31\n",
            "template": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    peers:\n    - peer-address: 127.0.0.1\n      peer-asn: 65000\n      my-asn: 65480\n    address-pools:\n    - name: packet-public\n      protocol: bgp\n      addresses:\n      - ${cidr}\n",
            "vars": {
              "cidr": "147.75.205.98/31"
            }
          },
          "depends_on": [
            "packet_reserved_ip_block.load_balancer_ips"
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "setup_kubeadm",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "458657109bdc70c3c8b71d567058f9c5368c24de069b990c4305b2683622e856",
            "rendered": "#!/bin/bash\n# vim: syntax=sh\n\nHOSTNAME=$(hostname -s)\nLOCAL_IP=$(ip a | grep \"inet 10\" | cut -d\" \" -f6 | cut -d\"/\" -f1)\n\necho \"[----- Setting up Kubernetes using kubeadm ----]\"\n\ncat \u003c\u003cEOF \u003ekubeadm-config.yaml\napiVersion: kubeadm.k8s.io/v1beta1\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: $LOCAL_IP\n  bindPort: 6443\nnodeRegistration:\n  name: $HOSTNAME\n  taints:\n  - key: \"kubeadmNode\"\n    value: \"master\"\n    effect: \"NoSchedule\"\n  kubeletExtraArgs:\n    cgroup-driver: \"systemd\"\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: ClusterConfiguration\nclusterName: kubernetes\nkubernetesVersion: v1.15.3\napiServer:\n  extraArgs:\n    secure-port: \"6443\"\n    bind-address: $LOCAL_IP\ncontrollerManager:\n  extraArgs:\n    bind-address: $LOCAL_IP\nscheduler:\n  extraArgs:\n    bind-address: $LOCAL_IP\netcd:\n  local:\n    extraArgs:\n      listen-client-urls: \"https://127.0.0.1:2379,https://$LOCAL_IP:2379\"\n      advertise-client-urls: \"https://$LOCAL_IP:2379\"\n      listen-peer-urls: \"https://$LOCAL_IP:2380\"\n      initial-advertise-peer-urls: \"https://$LOCAL_IP:2380\"\n      initial-cluster: \"$HOSTNAME=https://$LOCAL_IP:2380\"\n      initial-cluster-state: new\n    serverCertSANs:\n      - $HOSTNAME\n    peerCertSANs:\n      - $HOSTNAME\nnetworking:\n  dnsDomain: cluster.local\n  podSubnet: 172.16.0.0/12\n  serviceSubnet: 192.168.0.0/16\n---\napiVersion: kubelet.config.k8s.io/v1beta1\nkind: KubeletConfiguration\nclusterDNS:\n- 192.168.0.10\nclusterDomain: cluster.local\n---\napiVersion: kubeproxy.config.k8s.io/v1alpha1\nkind: KubeProxyConfiguration\nbindAddress: $LOCAL_IP\nEOF\n\nkubeadm init --config kubeadm-config.yaml\n\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n\necho \"[---- Done setting up kubernetes -----]\"\n",
            "template": "#!/bin/bash\n# vim: syntax=sh\n\nHOSTNAME=$(hostname -s)\nLOCAL_IP=$(ip a | grep \"inet 10\" | cut -d\" \" -f6 | cut -d\"/\" -f1)\n\necho \"[----- Setting up Kubernetes using kubeadm ----]\"\n\ncat \u003c\u003cEOF \u003ekubeadm-config.yaml\napiVersion: kubeadm.k8s.io/v1beta1\nkind: InitConfiguration\nlocalAPIEndpoint:\n  advertiseAddress: $LOCAL_IP\n  bindPort: ${kubernetes_port}\nnodeRegistration:\n  name: $HOSTNAME\n  taints:\n  - key: \"kubeadmNode\"\n    value: \"master\"\n    effect: \"NoSchedule\"\n  kubeletExtraArgs:\n    cgroup-driver: \"systemd\"\n---\napiVersion: kubeadm.k8s.io/v1beta1\nkind: ClusterConfiguration\nclusterName: kubernetes\nkubernetesVersion: ${kubernetes_version}\napiServer:\n  extraArgs:\n    secure-port: \"${kubernetes_port}\"\n    bind-address: $LOCAL_IP\ncontrollerManager:\n  extraArgs:\n    bind-address: $LOCAL_IP\nscheduler:\n  extraArgs:\n    bind-address: $LOCAL_IP\netcd:\n  local:\n    extraArgs:\n      listen-client-urls: \"https://127.0.0.1:2379,https://$LOCAL_IP:2379\"\n      advertise-client-urls: \"https://$LOCAL_IP:2379\"\n      listen-peer-urls: \"https://$LOCAL_IP:2380\"\n      initial-advertise-peer-urls: \"https://$LOCAL_IP:2380\"\n      initial-cluster: \"$HOSTNAME=https://$LOCAL_IP:2380\"\n      initial-cluster-state: new\n    serverCertSANs:\n      - $HOSTNAME\n    peerCertSANs:\n      - $HOSTNAME\nnetworking:\n  dnsDomain: ${kubernetes_dns_domain}\n  podSubnet: ${kubernetes_cluster_cidr}\n  serviceSubnet: ${kubernetes_service_cidr}\n---\napiVersion: kubelet.config.k8s.io/v1beta1\nkind: KubeletConfiguration\nclusterDNS:\n- ${kubernetes_dns_ip}\nclusterDomain: ${kubernetes_dns_domain}\n---\napiVersion: kubeproxy.config.k8s.io/v1alpha1\nkind: KubeProxyConfiguration\nbindAddress: $LOCAL_IP\nEOF\n\nkubeadm init --config kubeadm-config.yaml\n\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n\necho \"[---- Done setting up kubernetes -----]\"\n",
            "vars": {
              "kubernetes_cluster_cidr": "172.16.0.0/12",
              "kubernetes_dns_domain": "cluster.local",
              "kubernetes_dns_ip": "192.168.0.10",
              "kubernetes_port": "6443",
              "kubernetes_service_cidr": "192.168.0.0/16",
              "kubernetes_version": "v1.15.3"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "calico_node_peers",
      "each": "list",
      "provider": "provider.null",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_calico",
      "provider": "provider.null",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_calico_metallb",
      "provider": "provider.null",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_metallb",
      "provider": "provider.null",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_nginx_ingress",
      "provider": "provider.null",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_worker",
      "each": "list",
      "provider": "provider.null",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "test-deployment",
      "provider": "provider.null",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "packet_bgp_session",
      "name": "kube_bgp",
      "each": "list",
      "provider": "provider.packet",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "packet_device",
      "name": "k8s_controller",
      "provider": "provider.packet",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 0,
          "attributes": {
            "access_private_ipv4": "10.80.113.7",
            "access_public_ipv4": "147.75.205.143",
            "access_public_ipv6": "2604:1380:2000:a900::7",
            "always_pxe": false,
            "billing_cycle": "hourly",
            "created": "2019-09-22T19:12:15Z",
            "deployed_facility": "ams1",
            "description": null,
            "facilities": [
              "ams1"
            ],
            "facility": null,
            "hardware_reservation_id": null,
            "hostname": "ams1-controller",
            "id": "382b6f36-3323-46cd-a66f-7bb11722eed5",
            "ip_address_types": null,
            "ipxe_script_url": "",
            "locked": false,
            "network": [
              {
                "address": "147.75.205.143",
                "cidr": 31,
                "family": 4,
                "gateway": "147.75.205.142",
                "public": true
              },
              {
                "address": "2604:1380:2000:a900::7",
                "cidr": 127,
                "family": 6,
                "gateway": "2604:1380:2000:a900::6",
                "public": true
              },
              {
                "address": "10.80.113.7",
                "cidr": 31,
                "family": 4,
                "gateway": "10.80.113.6",
                "public": false
              }
            ],
            "network_type": "layer3",
            "operating_system": "ubuntu_16_04",
            "plan": "t1.small.x86",
            "ports": [
              {
                "bonded": true,
                "id": "69388394-b9a8-4782-b673-7c0d78fa59fe",
                "mac": "",
                "name": "bond0",
                "type": "NetworkBondPort"
              },
              {
                "bonded": true,
                "id": "86d7c103-da4c-4921-adab-f705794e313c",
                "mac": "0c:c4:7a:e5:48:de",
                "name": "eth0",
                "type": "NetworkPort"
              },
              {
                "bonded": true,
                "id": "01496cb2-a12f-47e8-a123-1955ddd11104",
                "mac": "0c:c4:7a:e5:48:df",
                "name": "eth1",
                "type": "NetworkPort"
              }
            ],
            "project_id": "01816d2a-97da-4589-a4b9-0de9eaf600cf",
            "project_ssh_key_ids": null,
            "public_ipv4_subnet_size": 31,
            "root_password": "0gTu}8j1\u003eL",
            "ssh_key_ids": [
              "ccd88347-2eff-4c45-be5b-3cffd49c9e58",
              "f827dc99-e92f-4817-abd3-24dc91f51401",
              "6f07ea62-b277-4738-8fd6-70e9622a51a1"
            ],
            "state": "active",
            "storage": "",
            "tags": [
              "kubernetes",
              "k8s",
              "controller"
            ],
            "updated": "2019-09-22T19:13:04Z",
            "user_data": null,
            "wait_for_reservation_deprovision": false
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.install_docker",
            "data.template_file.install_kubernetes",
            "data.template_file.setup_kubeadm",
            "tls_private_key.provisioning_key"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "packet_device",
      "name": "k8s_workers",
      "each": "list",
      "provider": "provider.packet",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "packet_reserved_ip_block",
      "name": "load_balancer_ips",
      "provider": "provider.packet",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "147.75.205.99",
            "address_family": 4,
            "cidr": 31,
            "cidr_notation": "147.75.205.98/31",
            "facility": "ams1",
            "gateway": "147.75.205.98",
            "global": false,
            "id": "0e8b3a4e-7dc2-42ba-8262-7a3203016d6c",
            "manageable": true,
            "management": false,
            "netmask": "255.255.255.254",
            "network": "147.75.205.98",
            "project_id": "01816d2a-97da-4589-a4b9-0de9eaf600cf",
            "public": true,
            "quantity": 2,
            "type": "public_ipv4"
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "packet_ssh_key",
      "name": "ssh_key_provisioning",
      "provider": "provider.packet",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created": "2019-09-22T19:06:45Z",
            "fingerprint": "18:98:d9:66:be:16:3a:43:ac:93:9e:75:87:64:6d:dc",
            "id": "f827dc99-e92f-4817-abd3-24dc91f51401",
            "name": "key for terraform provisioning",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDRHQmbVQWqMvjv6XbW1ABS9d1sxNW0cx0V2F2e0yQc0aI2OWiBSMZKncnIn+ce3B7DWIjwlw6ka6WQR0dlKWgOSuKW/bkepKCfXIcCJ/yaIhjXjqfp50wOz8iGZzXixySodoVkjt44/Wo/6yb0CwFTo1EH5kJJZFMIFgUGruCZYD8inGH8cxhaqUaDws3RwaG6Ylj9IdCUKC+0rdaxTzAcyvJ/Q39Mq4YshX28s9zCB74B+ViuJMMLkiiMC0c7BnasvdskXOn6/7DTqW6I6EF9GsnqRFmu8ROJBtFuyfQC8JLogUDA7IMUMyRG0GSqSV/NzJBakWVQ+wlvnDy2gcJGJFAPUgm2zy1g2HfSexeWDu5Q8XXhSZxmLvXGByTBxigJMrEudKGYYIPHVMNFDjhhEniSQYlVQ/Cc7TenxngosaOv30pZiZ7qvnByGwJ6aXPmuLBvsBuFdWbait8/Er/o/ue0nxUyj5zTCL4MeBeK66KYzKkag4oc2GLPM0lPhwTdBDAtPcAYk+ftJSlj89WMIZPQOmd2G6rRXjpZev6m1AN+tTokav28NYRBm2Oe+wHzeMud7P/jITmpaLE95waAD/Ixn3g6I+qKUI5BR+lrhDT94fLubl+4VTA+1ewroqF9ANxv9/FXRUUR/k9i9mF0lCvb7665sPTGDvgi63UPZw==\n",
            "updated": "2019-09-22T19:06:45Z"
          },
          "depends_on": [
            "tls_private_key.provisioning_key"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "tls_private_key",
      "name": "provisioning_key",
      "provider": "provider.tls",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "17bbf52151eb2818b3c5ff3b37b9a62d808b10a1",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "18:98:d9:66:be:16:3a:43:ac:93:9e:75:87:64:6d:dc",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDRHQmbVQWqMvjv6XbW1ABS9d1sxNW0cx0V2F2e0yQc0aI2OWiBSMZKncnIn+ce3B7DWIjwlw6ka6WQR0dlKWgOSuKW/bkepKCfXIcCJ/yaIhjXjqfp50wOz8iGZzXixySodoVkjt44/Wo/6yb0CwFTo1EH5kJJZFMIFgUGruCZYD8inGH8cxhaqUaDws3RwaG6Ylj9IdCUKC+0rdaxTzAcyvJ/Q39Mq4YshX28s9zCB74B+ViuJMMLkiiMC0c7BnasvdskXOn6/7DTqW6I6EF9GsnqRFmu8ROJBtFuyfQC8JLogUDA7IMUMyRG0GSqSV/NzJBakWVQ+wlvnDy2gcJGJFAPUgm2zy1g2HfSexeWDu5Q8XXhSZxmLvXGByTBxigJMrEudKGYYIPHVMNFDjhhEniSQYlVQ/Cc7TenxngosaOv30pZiZ7qvnByGwJ6aXPmuLBvsBuFdWbait8/Er/o/ue0nxUyj5zTCL4MeBeK66KYzKkag4oc2GLPM0lPhwTdBDAtPcAYk+ftJSlj89WMIZPQOmd2G6rRXjpZev6m1AN+tTokav28NYRBm2Oe+wHzeMud7P/jITmpaLE95waAD/Ixn3g6I+qKUI5BR+lrhDT94fLubl+4VTA+1ewroqF9ANxv9/FXRUUR/k9i9mF0lCvb7665sPTGDvgi63UPZw==\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA0R0Jm1UFqjL47+l21tQA\nUvXdbMTVtHMdFdhdntMkHNGiNjlogUjGSp3JyJ/nHtwew1iI8JcOpGulkEdHZSlo\nDkrilv25HqSgn1yHAif8miIY146n6edMDs/Ihmc14sckqHaFZI7eOP1qP+sm9AsB\nU6NRB+ZCSWRTCBYFBq7gmWA/Ipxh/HMYWqlGg8LN0cGhumJY/SHQlCgvtK3WsU8w\nHMryf0N/TKuGLIV9vLPcwge+AflYriTDC5IojAtHOwZ2rL3bJFzp+v+w06luiOhB\nfRrJ6kRZrvETiQbRbsn0AvCS6IFAwOyDFDMkRtBkqklfzcyQWpFlUPsJb5w8toHC\nRiRQD1IJts8tYNh30nsXlg7uUPF14UmcZi71xgckwcYoCTKxLnShmGCDx1TDRQ44\nYRJ4kkGJVUPwnO03p8Z4KLGjr99KWYme6r5wchsCemlz5riwb7AbhXVm2orfPxK/\n6P7ntJ8VMo+c0wi+DHgXiuuimMypGoOKHNhizzNJT4cE3QQwLT3AGJPn7SUpY/PV\njCGT0Dpndhuq0V46WXr+ptQDfrU6JGr9vDWEQZtjnvsB83jLnez/4yE5qWixPecG\ngA/yMZ94OiPqilCOQUfpa4Q0/eHy7m5fuFUwPtXsK6KhfQDcb/fxV0VFEf5PYvZh\ndJQr2++uubD0xg74Iut1D2cCAwEAAQ==\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 4096
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
